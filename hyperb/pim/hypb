
"agenda.org"
("Process_Inbox" nil nil eval-elisp ((as/treefactor-hydra)) "alexander.soto@gmail.com" "20200825:03:05:11" nil nil)
("News" nil nil eval-elisp ((elfeed)) "alexander.soto@gmail.com" "20200803:18:57:09" "alexander.soto" "20200803:18:57:17")
("Done" nil nil eval-elisp ((org-todo-list "DONE")) "alexander.soto@gmail.com" "20200803:18:28:52" "alexander.soto" "20200811:19:45:06")
("On_hold" nil nil eval-elisp ((org-todo-list "HOLD")) "alexander.soto@gmail.com" "20200803:18:15:18" "alexander.soto" "20200803:18:29:19")
("Waiting_for" nil nil eval-elisp ((org-todo-list "WAITING")) "alexander.soto@gmail.com" "20200803:18:14:55" nil nil)
("Next_actions" nil nil eval-elisp ((org-todo-list "NEXT")) "alexander.soto@gmail.com" "20200803:17:52:52" "alexander.soto" "20200803:18:42:36")
("Monthly" nil nil eval-elisp ((org-capture nil "wm")) "alexander.soto@gmail.com" "20200803:17:40:29" nil nil)
("Weekly" nil nil eval-elisp ((org-capture nil "ww")) "alexander.soto@gmail.com" "20200803:17:40:11" nil nil)
("Daily" nil nil eval-elisp ((org-capture nil "wd")) "alexander.soto@gmail.com" "20200803:17:38:51" "alexander.soto" "20200803:17:39:04")
("Flashcard" nil nil eval-elisp ((org-capture nil "f")) "alexander.soto@gmail.com" "20200803:17:38:01" nil nil)
("Create_habit" nil nil eval-elisp ((org-capture nil "h")) "alexander.soto@gmail.com" "20200803:17:37:37" "alexander.soto" "20200803:18:46:04")
("Link" nil nil eval-elisp ((org-capture nil "l")) "alexander.soto@gmail.com" "20200803:17:35:35" nil nil)
("Note" nil nil eval-elisp ((org-capture nil "n")) "alexander.soto@gmail.com" "20200803:17:35:19" nil nil)
("Phone_Call" nil nil eval-elisp ((org-capture nil "c")) "alexander.soto@gmail.com" "20200803:17:25:01" nil nil)
("Meeting" nil nil eval-elisp ((org-capture nil "m")) "alexander.soto@gmail.com" "20200803:17:24:31" nil nil)
("Project" nil nil eval-elisp ((org-capture nil "p")) "alexander.soto@gmail.com" "20200803:17:23:27" nil nil)
("Task" nil nil eval-elisp ((org-capture nil "t")) "alexander.soto@gmail.com" "20200803:17:22:55" nil nil)
("Personal_Journal" nil nil eval-elisp ((org-capture nil "jp")) "alexander.soto@gmail.com" "20200803:17:09:49" nil nil)
("Resilient_Journal" nil nil eval-elisp ((org-capture nil "jj")) "alexander.soto@gmail.com" "20200803:17:09:24" nil nil)
("Bedtime_Routine" nil nil eval-elisp ((org-capture nil "rb")) "alexander.soto@gmail.com" "20200803:09:47:15" nil nil)
("Morning_Routine" nil nil eval-elisp ((org-capture nil "rm")) "alexander.soto@gmail.com" "20200803:09:40:44" "alexander.soto" "20200803:09:41:56")
("Open_index" nil nil eval-elisp ((call-interactively (quote neuron-rib-open-z-index))) "alexander.soto@gmail.com" "20200811:19:10:35" nil nil)
("Configuration" nil nil eval-elisp ((call-interactively (quote neuron-edit-zettelkasten-configuration))) "alexander.soto@gmail.com" "20200811:19:09:54" nil nil)
("Replace_tag" nil nil eval-elisp ((call-interactively (quote neuron-replace-tag))) "alexander.soto@gmail.com" "20200811:14:35:28" "alexander.soto" "20200811:14:35:39")
("Daily_Notes" nil nil eval-elisp ((neuron-open-daily-notes)) "alexander.soto@gmail.com" "20200811:14:29:18" "alexander.soto" "20200811:14:29:31")
("Refresh_cache" nil nil eval-elisp ((neuron-refresh)) "alexander.soto@gmail.com" "20200811:14:28:36" nil nil)
("Kill_server" nil nil eval-elisp ((neuron-rib-kill)) "alexander.soto@gmail.com" "20200811:14:27:08" nil nil)
("Open_zettel" nil nil eval-elisp ((neuron-rib-open-zettel)) "alexander.soto@gmail.com" "20200811:14:26:22" nil nil)
("Start_server" nil nil eval-elisp ((neuron-rib-serve)) "alexander.soto@gmail.com" "20200811:14:24:39" "alexander.soto" "20200811:14:27:23")
("Generate_site" nil nil eval-elisp ((neuron-rib-generate)) "alexander.soto@gmail.com" "20200811:14:23:51" nil nil)
("Query_tags" nil nil eval-elisp ((call-interactively (quote neuron-query-tags))) "alexander.soto@gmail.com" "20200803:09:21:11" "alexander.soto" "20200803:09:21:49")
("New_Zettel" nil nil eval-elisp ((call-interactively (quote neuron-new-zettel))) "alexander.soto@gmail.com" "20200803:09:19:19" nil nil)
("Edit_Zettel" nil nil eval-elisp ((call-interactively (quote neuron-edit-zettel))) "alexander.soto@gmail.com" "20200803:09:14:32" "alexander.soto" "20200803:09:14:53")
